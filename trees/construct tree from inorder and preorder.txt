#include <bits/stdc++.h>
using namespace std;

struct Node{
    int data;
    Node* left;
    Node* right;
    Node(int x){
        data=x;
        left=NULL;
        right=NULL;
    }
};

int pre=0;
Node* constructTree(vector<int> inorder,vector<int> preorder,int start,int end){
    if(start>end){
        return NULL;
    }
    
    Node* root=new Node(preorder[pre++]);
    
    int inIndex;
    for(int i=start;i<=end;i++){
        if(inorder[i]==root->data){
            inIndex=i;
            break;
        }
    }
    
    root->left=constructTree(inorder,preorder,start,inIndex-1);
    root->right=constructTree(inorder,preorder,inIndex+1,end);
    return root;

    
}

void inorder_traversal(Node* root){
    if(root==NULL){
        return;
    }
    inorder_traversal(root->left);
    cout<<root->data<<endl;
    inorder_traversal(root->right);
}


int main() {
	// your code goes here
	/*
	Node* root=new Node(20);
	root->left=new Node(12);
	root->right=new Node(8);
	root->right->left=new Node(3);
	root->right->right=new Node(5);
	*/
	
	vector<int> inorder={20,10,40,30,50};
	vector<int> preorder={10,20,30,40,50};
	Node* root=constructTree(inorder,preorder,0,4);
	
	inorder_traversal(root);
	
	
	
}
