#include <bits/stdc++.h>
using namespace std;

struct Treenode{
    int data;
    Treenode* left;
    Treenode* right;
    int lcount;
    Treenode(int x){
        data=x;
        left=NULL;
        right=NULL;
        lcount=0;
    }
};


Treenode* insert(Treenode* root,int val){
    if(root==NULL){
        root=new Treenode(val);
        return root;
    }
    if(root->data>val){
        root->lcount=(root->lcount)+1;
        root->left=insert(root->left,val);
    }else{
        root->right=insert(root->right,val);
    }
    return root;
    
}

void inorder(Treenode* root){
    if(root==NULL){
        return;
    }
    inorder(root->left);
    cout<<root->data<<"::::"<<root->lcount<<endl;
    inorder(root->right);
}

Treenode* findKthSmallestNode(Treenode* root,int k){
    if(root==NULL){
        return root;
    }
    int val=(root->lcount)+1;
    if(val==k){
        return root;
    }else if(val>k){
        return findKthSmallestNode(root->left,k);
    }else{
        return findKthSmallestNode(root->right,k-val);
    }
}




int main() {
	// your code goes here
	Treenode* root=NULL;
	root=insert(root,50);
	root=insert(root,20);
	root=insert(root,100);
	root=insert(root,10);
	root=insert(root,40);
	root=insert(root,4);
	root=insert(root,70);
	root=insert(root,120);
	root=insert(root,60);
	root=insert(root,80);
	
	
    Treenode* res=findKthSmallestNode(root,8);
	cout<<res->data;
	
	
	
	
}
