#include <bits/stdc++.h>
using namespace std;

int knapsack_recur(vector<int>& weight,vector<int>& value,int w,int n,vector<vector<int>>& result){
    if(n==0 or w==0){
        return 0;
    }
    if(result[n][w]!=-1){
        return result[n][w];
    }
    
    if(weight[n-1]<=w){
        result[n][w]= max(value[n-1]+knapsack_recur(weight,value,w-weight[n-1],n-1,result),knapsack_recur(weight,value,w,n-1,result));
    }else{
        result[n][w]= knapsack_recur(weight,value,w,n-1,result);
    }
    return result[n][w];
}



int main() {
	// your code goes here
	vector<int> weight={1,3,4,5};
	vector<int> value={1,4,5,7};
	int w=7;
	int n=4;
	
	vector<vector<int>> result(n+1,vector<int>(w+1,-1));
	
	
	
	
	cout<<knapsack_recur(weight,value,w,n,result);

}
