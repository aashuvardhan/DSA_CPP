#include <bits/stdc++.h>
using namespace std;

struct TrieNode{
    TrieNode* child[26];
    bool isEnd;
    TrieNode(){
        isEnd=false;
        for(int i=0;i<26;i++){
            child[i]=NULL;
        }
    }
};

bool isEmpty(TrieNode* root){
    for(int i=0;i<26;i++){
        if(root->child[i]==NULL){
            return false;
        }
    }
    return true;
}


void lexicographic(TrieNode* root,vector<char>& str){
    if(root==NULL){
        return;
    }
    if(root->isEnd==true){
        for(auto ele: str){
            cout<<ele;
        }
        cout<<endl;
    }
    
    
    for(int i=0;i<26;i++){
        if(root->child[i]!=NULL){
            str.push_back((char)('a'+i));
            lexicographic(root->child[i],str);
            str.pop_back();
        }
    }
    
    
}



void insert(TrieNode* root, string str){
    
    TrieNode* curr=root;
    for(int i=0;i<str.size();i++){
        int index=str[i]-'a';
        if(curr->child[index]==NULL){
            curr->child[index]=new TrieNode();
        }
        curr=curr->child[index];
    }
    curr->isEnd=true;
    
    
}



int main() {
	// your code goes here
	
	                        
    TrieNode* root=new TrieNode();    
    insert(root,"bad");
    insert(root,"bat");
    insert(root,"geek");
    insert(root,"geeks");
    insert(root,"cat");
    insert(root,"cut");
    insert(root,"zoo");
    insert(root,"bed");
    insert(root,"battery");
    
    
    vector<char> str;
    lexicographic(root,str);
	
	return 0;
}
