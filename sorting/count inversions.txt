#include <bits/stdc++.h>
using namespace std;

int merge(int *ptr,int l,int mid,int h){
    vector<int> left;
    for(int i=l;i<=mid;i++){
        left.push_back(*(ptr+i));
    }
    vector<int> right;
    for(int i=mid+1;i<=h;i++){
        right.push_back(*(ptr+i));
    }
    
    int i=0;
    int n1=left.size();
    int j=0;
    int n2=right.size();
    int k=l;
    int res=0;
    while(i<n1 && j<n2){
        if(left[i]<=right[j]){
            *(ptr+k)=left[i];
            i++;
            
        }else{
		//the only change
            res+=(n1-i);
            *(ptr+k)=right[j];
            j++;
        }
        k++;
    }
    while(i<n1){
        *(ptr+k)=left[i];
        i++;
        k++;
    }
    while(j<n2){
        *(ptr+k)=right[j];
        j++;
        k++;
    }
    return res;
}




int mergesort(int *ptr,int low,int high){
    int res=0;
    if(low<high){
        
        int mid=(low+high)/2;
        res+=mergesort(ptr,low,mid);
        res+=mergesort(ptr,mid+1,high);
        res+=merge(ptr,low,mid,high);
        
    }
    return res;
    
}




int main() {
	// your code goes here
	vector<int> v={40,30,20,10};
	int low=0;
	
	int high=3;
	
	int *ptr=&v[0];
	int res=mergesort(ptr,low,high);
	
	cout<<res<<endl;

}


